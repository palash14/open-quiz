services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: quiz-api-web
    container_name: quiz-api-web
    restart: always
    ports:
      - "8001:8000"
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./database:/app/database
    networks:
      - quiz-api-network
    depends_on:
      db:
        condition: service_healthy
      redis:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    container_name: quiz-api-db
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quiz-api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    container_name: quiz-api-adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - quiz-api-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ADMINER_DEFAULT_SERVER=quiz-api-db
      - ADMINER_DEFAULT_DRIVER=postgresql

  mailpit:
    image: "axllent/mailpit:latest"
    container_name: quiz-api-mailpit
    ports:
      - "${FORWARD_MAILPIT_PORT:-1025}:1025"
      - "${FORWARD_MAILPIT_DASHBOARD_PORT:-8025}:8025"
    networks:
      - quiz-api-network

  redis:
    image: "redis:alpine"
    container_name: quiz-api-redis
    ports:
      - "${FORWARD_REDIS_PORT:-6379}:6379"
    volumes:
      - "redis_data:/data"
    networks:
      - quiz-api-network
    healthcheck:
      test:
        - CMD
        - redis-cli
        - ping
      retries: 3
      timeout: 5s

  # celery:
  #   build:
  #     dockerfile: Dockerfile.celery
  #   container_name: quiz-api-celery
  #   image: quiz-api-celery
  #   volumes:
  #     - ./src:/app/src
  #   networks:
  #     - quiz-api-network
  #   restart: unless-stopped
  #   depends_on:
  #     db:
  #       condition: service_healthy
  #     redis:
  #       condition: service_healthy

networks:
  quiz-api-network:
    driver: bridge

volumes:
  postgres_data:
  redis_data:
    driver: local
