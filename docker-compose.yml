services:
  web:
    build:
      context: .
      dockerfile: Dockerfile
    image: quiz-api-web
    container_name: quiz-api-web
    restart: always
    ports:
      - "8001:8000"
    env_file:
      - .env
    volumes:
      - ./src:/app/src
      - ./database:/app/database
    networks:
      - quiz-api-network
    depends_on:
      db:
        condition: service_healthy

  db:
    image: postgres:15-alpine
    container_name: quiz-api-db
    restart: always
    env_file:
      - .env
    volumes:
      - postgres_data:/var/lib/postgresql/data
    networks:
      - quiz-api-network
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U $$POSTGRES_USER -d $$POSTGRES_DB"]
      interval: 5s
      timeout: 5s
      retries: 5

  adminer:
    image: adminer:latest
    container_name: quiz-api-adminer
    restart: always
    ports:
      - "8081:8080"
    networks:
      - quiz-api-network
    depends_on:
      db:
        condition: service_healthy
    environment:
      - ADMINER_DEFAULT_SERVER=quiz-api-db
      - ADMINER_DEFAULT_DRIVER=postgresql

networks:
  quiz-api-network:
    driver: bridge

volumes:
  postgres_data:
